apiVersion: templates.krateo.io/v1
kind: RESTAction
metadata:
  name: {{ .Values.global.compositionName }}-composition-finops-column-panel-2-row-1-linechart
spec:
  api:
  - name: getComposition
    path: "/apis/{{ .Values.global.compositionApiVersion }}/namespaces/{{ .Values.global.compositionNamespace }}/{{ .Values.global.compositionResource }}/{{ .Values.global.compositionName }}"
    verb: GET
    headers:
    - 'Accept: application/json'
  - name: metrics
    dependsOn: 
      name: getComposition
    endpointRef: 
      name: finops-database-handler-endpoint
      namespace: krateo-system
    path: "/compute/metrics"
    verb: POST
    payload: |
      ${ {table_name: "{{ .Values.global.tableName }}_res", resource_name: .getComposition.spec.name, resource_group_name: .getComposition.spec.resourceGroupName } }
    headers:
    - 'Accept: application/json'
    - 'Content-Type: application/json'
---
apiVersion: templates.krateo.io/v1
kind: RESTAction
metadata:
  name: {{ .Values.global.compositionName }}-composition-finops-column-panel-2-row-1-table
spec:
  api:
  - name: getComposition
    path: "/apis/{{ .Values.global.compositionApiVersion }}/namespaces/{{ .Values.global.compositionNamespace }}/{{ .Values.global.compositionResource }}/{{ .Values.global.compositionName }}"
    verb: GET
    headers:
    - 'Accept: application/json'
    filter: |
      [ .getComposition.spec.optimization | fromjson | .[] | { resourceid: (.resourceid | split("/") | .[-1]), metricname: .metricname, unit: .unit, optimizeFrom: .optimization.from, resourceDelta: .optimization.resourceDelta, optimizeTo: .optimization.to  }]